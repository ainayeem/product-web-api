// <auto-generated />
using System;
using ECom.Persistence.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ECom.Persistence.Migrations
{
    [DbContext(typeof(EComDbContext))]
    [Migration("20240515094811_small case")]
    partial class smallcase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ECom.Persistence.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SearchEngineFriendlyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2024, 5, 15, 9, 48, 10, 106, DateTimeKind.Utc).AddTicks(6504),
                            Name = "summer t-shirt",
                            SearchEngineFriendlyName = "summer-t-shirt-male"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2024, 5, 15, 9, 48, 10, 106, DateTimeKind.Utc).AddTicks(6508),
                            Name = "summer pant",
                            SearchEngineFriendlyName = "summer-pant-male"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2024, 5, 15, 9, 48, 10, 106, DateTimeKind.Utc).AddTicks(6509),
                            Name = "summer shirt",
                            SearchEngineFriendlyName = "summer-shirt-male"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2024, 5, 15, 9, 48, 10, 106, DateTimeKind.Utc).AddTicks(6510),
                            Name = "winter t-shirt",
                            SearchEngineFriendlyName = "winter-t-shirt-male"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2024, 5, 15, 9, 48, 10, 106, DateTimeKind.Utc).AddTicks(6511),
                            Name = "winter shirt",
                            SearchEngineFriendlyName = "winter-shirt-male"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2024, 5, 15, 9, 48, 10, 106, DateTimeKind.Utc).AddTicks(6512),
                            Name = "spring jacket",
                            SearchEngineFriendlyName = "spring-jacket-female"
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2024, 5, 15, 9, 48, 10, 106, DateTimeKind.Utc).AddTicks(6513),
                            Name = "autumn scarf",
                            SearchEngineFriendlyName = "autumn-scarf-unisex"
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2024, 5, 15, 9, 48, 10, 106, DateTimeKind.Utc).AddTicks(6514),
                            Name = "summer dress",
                            SearchEngineFriendlyName = "summer-dress-female"
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2024, 5, 15, 9, 48, 10, 106, DateTimeKind.Utc).AddTicks(6515),
                            Name = "winter coat",
                            SearchEngineFriendlyName = "winter-coat-female"
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2024, 5, 15, 9, 48, 10, 106, DateTimeKind.Utc).AddTicks(6516),
                            Name = "spring skirt",
                            SearchEngineFriendlyName = "spring-skirt-female"
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(2024, 5, 15, 9, 48, 10, 106, DateTimeKind.Utc).AddTicks(6517),
                            Name = "autumn sweater",
                            SearchEngineFriendlyName = "autumn-sweater-male"
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(2024, 5, 15, 9, 48, 10, 106, DateTimeKind.Utc).AddTicks(6518),
                            Name = "winter boots",
                            SearchEngineFriendlyName = "winter-boots-unisex"
                        },
                        new
                        {
                            Id = 13,
                            CreatedOn = new DateTime(2024, 5, 15, 9, 48, 10, 106, DateTimeKind.Utc).AddTicks(6518),
                            Name = "spring hat",
                            SearchEngineFriendlyName = "spring-hat-unisex"
                        },
                        new
                        {
                            Id = 14,
                            CreatedOn = new DateTime(2024, 5, 15, 9, 48, 10, 106, DateTimeKind.Utc).AddTicks(6519),
                            Name = "summer sandals",
                            SearchEngineFriendlyName = "summer-sandals-female"
                        },
                        new
                        {
                            Id = 15,
                            CreatedOn = new DateTime(2024, 5, 15, 9, 48, 10, 106, DateTimeKind.Utc).AddTicks(6520),
                            Name = "autumn jacket",
                            SearchEngineFriendlyName = "autumn-jacket-male"
                        });
                });

            modelBuilder.Entity("ECom.Persistence.Domain.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("VariantId")
                        .HasColumnType("integer");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VariantId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Stocks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Quantity = 10,
                            VariantId = 1,
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 2,
                            Quantity = 5,
                            VariantId = 2,
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 3,
                            Quantity = 20,
                            VariantId = 3,
                            WarehouseId = 2
                        },
                        new
                        {
                            Id = 4,
                            Quantity = 15,
                            VariantId = 4,
                            WarehouseId = 2
                        },
                        new
                        {
                            Id = 5,
                            Quantity = 25,
                            VariantId = 5,
                            WarehouseId = 3
                        },
                        new
                        {
                            Id = 6,
                            Quantity = 30,
                            VariantId = 6,
                            WarehouseId = 3
                        },
                        new
                        {
                            Id = 7,
                            Quantity = 12,
                            VariantId = 7,
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 8,
                            Quantity = 7,
                            VariantId = 8,
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 9,
                            Quantity = 22,
                            VariantId = 9,
                            WarehouseId = 2
                        },
                        new
                        {
                            Id = 10,
                            Quantity = 18,
                            VariantId = 10,
                            WarehouseId = 2
                        },
                        new
                        {
                            Id = 11,
                            Quantity = 30,
                            VariantId = 11,
                            WarehouseId = 3
                        },
                        new
                        {
                            Id = 12,
                            Quantity = 40,
                            VariantId = 12,
                            WarehouseId = 3
                        },
                        new
                        {
                            Id = 13,
                            Quantity = 50,
                            VariantId = 13,
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 14,
                            Quantity = 10,
                            VariantId = 14,
                            WarehouseId = 2
                        },
                        new
                        {
                            Id = 15,
                            Quantity = 60,
                            VariantId = 15,
                            WarehouseId = 3
                        },
                        new
                        {
                            Id = 16,
                            Quantity = 0,
                            VariantId = 16,
                            WarehouseId = 1
                        });
                });

            modelBuilder.Entity("ECom.Persistence.Domain.Variant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Variants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "red",
                            ProductId = 1,
                            Size = "small"
                        },
                        new
                        {
                            Id = 2,
                            Color = "blue",
                            ProductId = 1,
                            Size = "medium"
                        },
                        new
                        {
                            Id = 3,
                            Color = "green",
                            ProductId = 2,
                            Size = "large"
                        },
                        new
                        {
                            Id = 4,
                            Color = "yellow",
                            ProductId = 3,
                            Size = "small"
                        },
                        new
                        {
                            Id = 5,
                            Color = "black",
                            ProductId = 4,
                            Size = "medium"
                        },
                        new
                        {
                            Id = 6,
                            Color = "white",
                            ProductId = 5,
                            Size = "large"
                        },
                        new
                        {
                            Id = 7,
                            Color = "pink",
                            ProductId = 6,
                            Size = "small"
                        },
                        new
                        {
                            Id = 8,
                            Color = "brown",
                            ProductId = 7,
                            Size = "one size"
                        },
                        new
                        {
                            Id = 9,
                            Color = "orange",
                            ProductId = 8,
                            Size = "medium"
                        },
                        new
                        {
                            Id = 10,
                            Color = "gray",
                            ProductId = 9,
                            Size = "large"
                        },
                        new
                        {
                            Id = 11,
                            Color = "purple",
                            ProductId = 10,
                            Size = "small"
                        },
                        new
                        {
                            Id = 12,
                            Color = "maroon",
                            ProductId = 11,
                            Size = "medium"
                        },
                        new
                        {
                            Id = 13,
                            Color = "black",
                            ProductId = 12,
                            Size = "large"
                        },
                        new
                        {
                            Id = 14,
                            Color = "white",
                            ProductId = 13,
                            Size = "one size"
                        },
                        new
                        {
                            Id = 15,
                            Color = "blue",
                            ProductId = 14,
                            Size = "small"
                        },
                        new
                        {
                            Id = 16,
                            Color = "green",
                            ProductId = 15,
                            Size = "medium"
                        });
                });

            modelBuilder.Entity("ECom.Persistence.Domain.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Location = "dhaka",
                            Name = "dhaka warehouse"
                        },
                        new
                        {
                            Id = 2,
                            Location = "chittagong",
                            Name = "chittagong warehouse"
                        },
                        new
                        {
                            Id = 3,
                            Location = "khulna",
                            Name = "khulna warehouse"
                        },
                        new
                        {
                            Id = 4,
                            Location = "rajshahi",
                            Name = "rajshahi warehouse"
                        });
                });

            modelBuilder.Entity("ECom.Persistence.Domain.Stock", b =>
                {
                    b.HasOne("ECom.Persistence.Domain.Variant", "Variant")
                        .WithMany("Stocks")
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECom.Persistence.Domain.Warehouse", "Warehouse")
                        .WithMany("Stocks")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Variant");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("ECom.Persistence.Domain.Variant", b =>
                {
                    b.HasOne("ECom.Persistence.Domain.Product", "Product")
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECom.Persistence.Domain.Product", b =>
                {
                    b.Navigation("Variants");
                });

            modelBuilder.Entity("ECom.Persistence.Domain.Variant", b =>
                {
                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("ECom.Persistence.Domain.Warehouse", b =>
                {
                    b.Navigation("Stocks");
                });
#pragma warning restore 612, 618
        }
    }
}
